/* Global */
:root {
  color-scheme: dark; /* make browser's scrollbar dark themed */
  --animated-accent: #cba6f7;
}

button span {
  pointer-events: none; /* fixes buttons not firing when click target is the 'span' child */
}

/* Utilities */
.scroll-gutter-stable-both {
  scrollbar-gutter: stable both-edges;
}
body[data-rtl] {
  .text-right-to-left {
    direction: rtl
  }
}

/* Vue transitions */
.slide-fade-enter-active, .slide-fade-leave-active {
  transition: opacity .3s cubic-bezier(0,.65,.35,1), transform .3s cubic-bezier(0,.65,.35,1);
}
.slide-fade-enter-from, .slide-fade-leave-to {
  opacity: 0;
  transform: translateY(16px);
}

.page-enter-active {
  transition: opacity .3s cubic-bezier(0,.65,.35,1), transform .3s cubic-bezier(0,.65,.35,1);
}
.page-enter-from, .page-leave-to {
  opacity: 0;
}
.page-enter-from {
  transform: translateX(32px);
}

.fade-enter-active, .fade-leave-active {
  transition: opacity .3s cubic-bezier(0,.65,.35,1);
}
.fade-enter-from, .fade-leave-to {
  opacity: 0;
}

/* Animations */
.animate-progress-bar {
  animation-name: progress-bar;
  animation-duration: 750ms;
  animation-iteration-count: infinite;
  animation-timing-function: ease-in-out;
  /*
   * Add an animation delay so that cached routes
   * will not trigger this animation
   */
  animation-delay: 100ms;
}
.animate-shake {
  animation: shake 820ms cubic-bezier(.36,.07,.19,.97) both;
}
.animated-accent-text { color: var(--animated-accent) }
.animated-accent-background { background-color: var(--animated-accent) }
.animated-accent-border { border-color: var(--animated-accent) }
.animated-accent-before-background:before { background-color: var(--animated-accent) }

/* Keyframes */
@keyframes progress-bar {
  from {
    transform: translateX(-100%);
    /* Override initial opacity value */
    opacity: 1;
  }
  to {
    transform: translateX(100%);
    /* Override initial opacity value */
    opacity: 1;
  }
}
@keyframes shake {
  10%, 90% { transform: translate3d(-1px, 0, 0) }
  20%, 80% { transform: translate3d(2px, 0, 0) }
  30%, 50%, 70% { transform: translate3d(-4px, 0, 0) }
  40%, 60% { transform: translate3d(4px, 0, 0) }
}